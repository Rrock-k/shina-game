/**
 * Базовый класс для всех состояний Шины
 * Определяет интерфейс для работы с конечным автоматом
 */
export class BaseState {
    /**
     * Вызывается при входе в состояние
     * @param {Object} shina - экземпляр Шины
     * @param {Object} task - задача, связанная с состоянием (может быть null)
     */
    enter(shina, task) {
        // Базовая реализация - пустая
        // Переопределяется в наследниках при необходимости
    }

    /**
     * Вызывается каждый кадр, пока Шина находится в этом состоянии
     * @param {Object} shina - экземпляр Шины
     */
    execute(shina) {
        // Базовая реализация - пустая
        // Переопределяется в наследниках при необходимости
    }

    /**
     * Вызывается при выходе из состояния
     * @param {Object} shina - экземпляр Шины
     */
    exit(shina) {
        // Базовая реализация - пустая
        // Переопределяется в наследниках при необходимости
    }

    /**
     * Обрабатывает входящее сообщение
     * @param {Object} shina - экземпляр Шины
     * @param {Object} message - входящее сообщение
     * @returns {boolean} - true если сообщение обработано, false если проигнорировано
     */
    onMessage(shina, message) {
        // Базовая реализация - сообщение игнорируется
        return false;
    }

    /**
     * Обрабатывает входящий звонок
     * @param {Object} shina - экземпляр Шины
     * @param {Object} call - входящий звонок
     * @returns {boolean} - true если звонок принят, false если отклонен
     */
    onPhoneCall(shina, call) {
        // Базовая реализация - звонок отклоняется
        return false;
    }

    /**
     * Возвращает название состояния
     * @returns {string} - название состояния
     */
    getName() {
        return this.constructor.name;
    }
}
