/**
 * UIRenderer - –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–µ–Ω—é, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –¥–∏—Å–ø–ª–µ–∏ –∏ –∫–Ω–æ–ø–∫–∏
 */
export class UIRenderer {
  constructor(config, timeManager, pauseManager, dayNightManager, panningController) {
    this.config = config;
    this.timeManager = timeManager;
    this.pauseManager = pauseManager;
    this.dayNightManager = dayNightManager;
    this.panningController = panningController;
    
    // UI —ç–ª–µ–º–µ–Ω—Ç—ã
    this.datetimeDisplay = null;
    this.routeDisplay = null;
    this.zoomButton = null;
    this.zoomInButton = null;
    this.zoomOutButton = null;
    this.speedButton = null;
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    this.isInitialized = false;
    this.currentRouteIndex = 0;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
   */
  init() {
    if (this.isInitialized) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ UI —ç–ª–µ–º–µ–Ω—Ç—ã
    this.datetimeDisplay = document.getElementById('game-datetime');
    this.routeDisplay = document.getElementById('route-info');
    this.zoomButton = document.getElementById('zoom-button');
    this.zoomInButton = document.getElementById('zoom-in-button');
    this.zoomOutButton = document.getElementById('zoom-out-button');
    this.speedButton = document.getElementById('speed-button');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω—é
    this.initMenu();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∏—Å–ø–ª–µ–∏
    this.updateRouteDisplay();
    this.updateDateTimeDisplay();
    
    this.isInitialized = true;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é-–±—É—Ä–≥–µ—Ä–∞
   */
  initMenu() {
    const burgerButton = document.getElementById('burger-button');
    const menuModal = document.getElementById('menu-modal');
    const modalClose = document.getElementById('modal-close');
    const menuItems = document.querySelectorAll('.menu-item');

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞–Ω–æ—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è
    const updatePanningState = () => {
      const isMenuOpen = menuModal.classList.contains('active');
      if (this.panningController) {
        this.panningController.setMenuOpen(isMenuOpen);
      }
    };

    // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ –±—É—Ä–≥–µ—Ä
    burgerButton.addEventListener('click', () => {
      menuModal.classList.toggle('active');
      burgerButton.classList.toggle('active');
      updatePanningState();
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
    modalClose.addEventListener('click', () => {
      menuModal.classList.remove('active');
      burgerButton.classList.remove('active');
      updatePanningState();
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    menuModal.addEventListener('click', (e) => {
      if (e.target === menuModal) {
        menuModal.classList.remove('active');
        burgerButton.classList.remove('active');
        updatePanningState();
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –Ω–∞–∂–∞—Ç–∏—é Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && menuModal.classList.contains('active')) {
        menuModal.classList.remove('active');
        burgerButton.classList.remove('active');
        updatePanningState();
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
    menuItems.forEach(item => {
      item.addEventListener('click', () => {
        const itemId = item.id;

        // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
        switch (itemId) {
          case 'menu-pause':
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –ø–∞—É–∑—É
            this.pauseManager.togglePause();
            this.timeManager.setPaused(this.pauseManager.isPaused());
            break;
          case 'menu-speed':
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
            if (this.speedButton) {
              this.speedButton.click();
            }
            this.showMenuNotification('‚ö° –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞');
            break;
          case 'menu-daynight':
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –¥–Ω—è/–Ω–æ—á–∏ (–Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é)
            this.dayNightManager.toggleDayNightMode();
            break;
          case 'menu-route':
            this.showMenuNotification('üó∫Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ', '–¢–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç: ' + this.config.ROUTE_SCHEDULE[0].name);
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            menuModal.classList.remove('active');
            burgerButton.classList.remove('active');
            updatePanningState();
            break;
          case 'menu-settings':
            this.showMenuNotification('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            menuModal.classList.remove('active');
            burgerButton.classList.remove('active');
            updatePanningState();
            break;
          case 'menu-help':
            this.showMenuNotification('‚ùì –ü–æ–º–æ—â—å', '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º—ã—à—å –¥–ª—è –ø–∞–Ω–æ—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ–ª–µ—Å–æ –º—ã—à–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö: –∫–∞—Å–∞–Ω–∏–µ –¥–ª—è –ø–∞–Ω–æ—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è, –¥–≤–∞ –ø–∞–ª—å—Ü–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è. –†–µ–∂–∏–º –¥–Ω—è/–Ω–æ—á–∏ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π, —Ç–æ–ª—å–∫–æ –¥–µ–Ω—å, —Ç–æ–ª—å–∫–æ –Ω–æ—á—å. –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–≤–µ—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞.');
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            menuModal.classList.remove('active');
            burgerButton.classList.remove('active');
            updatePanningState();
            break;
          case 'menu-about':
            this.showMenuNotification('‚ÑπÔ∏è –û –∏–≥—Ä–µ', '–ö–∞—Ä—Ç–∞ –®–∏–Ω—ã - —Å–∏–º—É–ª—è—Ç–æ—Ä –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –≥–æ—Ä–æ–¥—É —Å —Å–∏—Å—Ç–µ–º–æ–π —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–≤ –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π.');
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            menuModal.classList.remove('active');
            burgerButton.classList.remove('active');
            updatePanningState();
            break;
        }
      });
    });
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ –º–µ–Ω—é
   */
  showMenuNotification(title, message = '') {
    const notification = document.createElement('div');
    notification.innerHTML = `<strong>${title}</strong>${message ? '<br>' + message : ''}`;
    notification.style.cssText = `
      position: fixed;
      top: 100px;
      left: 50%;
      transform: translateX(-50%);
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: white;
      padding: 15px 25px;
      border-radius: 10px;
      font-size: 14px;
      font-weight: bold;
      z-index: 1001;
      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
      text-align: center;
      max-width: 300px;
      animation: slideDown 0.3s ease-out;
    `;

    document.body.appendChild(notification);

    // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      if (notification.parentNode) {
        notification.style.animation = 'slideDown 0.3s ease-out reverse';
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 300);
      }
    }, 3000);
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è –º–∞—Ä—à—Ä—É—Ç–∞
   * @param {boolean} isAtDestination - –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –º–∞—à–∏–Ω–∞ –≤ –ø—É–Ω–∫—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
   */
  updateRouteDisplay(isAtDestination = false) {
    if (!this.routeDisplay) return; // –∑–∞—â–∏—Ç–∞ –æ—Ç –≤—ã–∑–æ–≤–∞ –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const currentDest = this.config.ROUTE_SCHEDULE[this.currentRouteIndex];
    const prefixSpan = this.routeDisplay.querySelector('.route-prefix');
    const destinationSpan = this.routeDisplay.querySelector('.route-destination');
    
    if (isAtDestination) {
      prefixSpan.textContent = '–í –ø—É–Ω–∫—Ç–µ:';
      destinationSpan.textContent = currentDest.name;
    } else {
      prefixSpan.textContent = '–í –ø—É—Ç–∏ –≤:';
      destinationSpan.textContent = currentDest.name;
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
   */
  updateDateTimeDisplay() {
    if (this.datetimeDisplay) {
      this.datetimeDisplay.innerHTML = this.timeManager.formatDateTime();
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  updateZoomButton() {
    if (typeof this.panningController !== 'undefined' && this.panningController) {
      const isFullscreen = this.panningController.isFullscreenMode();
      if (isFullscreen) {
        this.zoomButton.textContent = '–û–±—ã—á–Ω—ã–π —Ä–∞–∑–º–µ—Ä';
        this.zoomButton.classList.add('boosted');
      } else {
        const scale = this.panningController.getCurrentScale();
        this.zoomButton.textContent = `–ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω`;
        this.zoomButton.classList.toggle('boosted', scale > 1.1);
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
      const isMobile = window.innerWidth <= 768;
      if (isMobile) {
        const scale = this.panningController.getCurrentScale();
        this.zoomInButton.disabled = scale >= 10;
        this.zoomOutButton.disabled = scale <= 0.1;
      }
    }
  }

  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –º–∞—Ä—à—Ä—É—Ç–∞
   */
  setCurrentRouteIndex(index) {
    this.currentRouteIndex = index;
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
   * @param {boolean} isAtDestination - –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –º–∞—à–∏–Ω–∞ –≤ –ø—É–Ω–∫—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
   */
  update(isAtDestination = false) {
    this.updateDateTimeDisplay();
    this.updateRouteDisplay(isAtDestination);
    this.updateZoomButton();
  }
}
