
import { initTrafficLightsForIntersection, getDirectionForSegment, Direction, TrafficLightCoordinator, keyForIntersection } from './systems/trafficLights.js';
import { CarTrafficController } from './systems/carTrafficControl.js';
import { PanningController } from './systems/panning.js';
import { CONFIG } from './config/gameConfig.js';
import { TimeManager } from './game/TimeManager.js';
import { PauseManager } from './game/PauseManager.js';
import { DayNightManager } from './game/DayNightManager.js';
import { JournalManager } from './game/JournalManager.js';
import { WorldRenderer } from './rendering/WorldRenderer.js';
import { CarRenderer } from './rendering/CarRenderer.js';
import { UIRenderer } from './rendering/UIRenderer.js';
// –ù–æ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏
import { Car } from './entities/Car.js';
// –£—Ç–∏–ª–∏—Ç—ã
import { PathBuilder } from './systems/PathBuilder.js';
import { randInt } from './utils/math.js';
// –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –∏–≥—Ä—ã
import Game from './game/Game.js';

// globals - –£–î–ê–õ–ï–ù–´: —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ game

// –ú–µ–Ω–µ–¥–∂–µ—Ä—ã
let carRenderer;

// –ù–æ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ —Ç–µ–ø–µ—Ä—å –≤ game.game.carEntity –∏ game.game.shinaEntity

// –î–ï–ë–ê–ì –ú–û–î
let DEBUG_MODE = true; // —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å
let debugInfo = {
  frameCount: 0,
  lastLogTime: 0,
  logInterval: 1000 // –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
};


function debugLog (message, data = null) {
  if (!DEBUG_MODE) return;
  const now = Date.now();
  if (now - debugInfo.lastLogTime > debugInfo.logInterval) {
    console.log(`üêõ DEBUG [${new Date().toLocaleTimeString()}]: ${message}`, data || '');
    debugInfo.lastLogTime = now;
  }
}

function debugLogAlways (message, data = null) {
  if (!DEBUG_MODE) return;
  console.log(`üêõ DEBUG [${new Date().toLocaleTimeString()}]: ${message}`, data || '');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ –∑–¥–∞–Ω–∏–∏ —Ç–µ–ø–µ—Ä—å –≤ Game.js


// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π —Ç–µ–ø–µ—Ä—å –≤ Game.js


// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–µ–π —Ç–µ–ø–µ—Ä—å –≤ Game.js

// –ì–µ–æ–º–µ—Ç—Ä–∏—è –∑–æ–Ω —Ç–µ–ø–µ—Ä—å –≤ game.zoneGeometry

let currentRouteIndex = 0;
let stayTimer = 0; // —Ç–∞–π–º–µ—Ä –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—Ç–µ
let savedCarState = null; // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∑–¥–∞–Ω–∏–µ
// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–≤ –ø–æ –∫–ª—é—á—É –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞
const intersectionKeyToTL = new Map();
// –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –∑–µ–ª–µ–Ω–æ–π –≤–æ–ª–Ω—ã —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–≤
const trafficCoordinator = new TrafficLightCoordinator(45); // —Å–∫–æ—Ä–æ—Å—Ç—å –º–∞—à–∏–Ω ~45 –∫–º/—á
// –î–µ–ª–∞–µ–º trafficCoordinator –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º
window.trafficCoordinator = trafficCoordinator;

// üö¶ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–í–ï–¢–û–§–û–†–û–í üö¶
// –ú–∞—Å—Å–∏–≤ –±—É–∫–≤–µ–Ω–Ω–æ-—Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–æ–≤, –≥–¥–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–≤–µ—Ç–æ—Ñ–æ—Ä—ã
// –§–æ—Ä–º–∞—Ç: 'A1', 'B2', 'C3' –∏ —Ç.–¥. (–±—É–∫–≤–∞ = —Å—Ç–æ–ª–±–µ—Ü –¥–æ—Ä–æ–≥–∏, —Ü–∏—Ñ—Ä–∞ = —Ä—è–¥ –¥–æ—Ä–æ–≥–∏)
// –ú–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–≤!
const TRAFFIC_LIGHTS_CONFIG = [
  'A2',              // –ª–µ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü (–≤—ä–µ–∑–¥ –≤ –≥–æ—Ä–æ–¥) - —É–±—Ä–∞–Ω A3
  'B2',              // –≤—Ç–æ—Ä–æ–π —Å—Ç–æ–ª–±–µ—Ü - —É–±—Ä–∞–Ω B4
  'C3',              // —Ç—Ä–µ—Ç–∏–π —Å—Ç–æ–ª–±–µ—Ü - —É–±—Ä–∞–Ω C1
  'D2', 'D4',        // —á–µ—Ç–≤–µ—Ä—Ç—ã–π —Å—Ç–æ–ª–±–µ—Ü
  'E1',              // –ø—è—Ç—ã–π —Å—Ç–æ–ª–±–µ—Ü - —É–±—Ä–∞–Ω E3
  'F2', 'F4',        // —à–µ—Å—Ç–æ–π —Å—Ç–æ–ª–±–µ—Ü
  'G1', 'G3', 'G4'   // –ø—Ä–∞–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü (–≤—ã–µ–∑–¥ –∏–∑ –≥–æ—Ä–æ–¥–∞) - —É–±—Ä–∞–Ω G2
];

// –î–µ–ª–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–≤ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
window.TRAFFIC_LIGHTS_CONFIG = TRAFFIC_LIGHTS_CONFIG;

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –Ω–∞—á–∞–ª–µ
const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–≥—Ä—ã
const game = new Game();

// –î–µ–ª–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è Game.js (–≤—Ä–µ–º–µ–Ω–Ω–æ)
window.CONFIG = CONFIG;
window.debugLog = debugLog;
window.debugLogAlways = debugLogAlways;
window.debugInfo = debugInfo;
window.currentRouteIndex = currentRouteIndex;
window.savedCarState = savedCarState;
window.zoneGeometry = game.zoneGeometry;

// –ü–æ–ª—É—á–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏–∑ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∏–≥—Ä—ã
const timeManager = game.timeManager;
const pauseManager = game.pauseManager;
const journalManager = game.journalManager;
const dayNightManager = game.dayNightManager;

let panningController;

// –ü–æ–ª—É—á–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–µ—Ä—ã –∏–∑ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∏–≥—Ä—ã
let worldRenderer = game.worldRenderer;
let uiRenderer = game.uiRenderer;

game._setupWorld(intersectionKeyToTL);

uiRenderer.init();

// –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–∂–∏–º–∞ –¥–Ω—è/–Ω–æ—á–∏ –∏ –ø–∞—É–∑—ã –≤ –º–µ–Ω—é –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
setTimeout(() => {
  dayNightManager.updateDayNightModeText();
  pauseManager.updatePauseModeText();
}, 100);

const carData = game._createCar(currentRouteIndex, savedCarState, intersectionKeyToTL, uiRenderer, debugLogAlways);
carRenderer = carData.carRenderer;
game._layout(panningController, currentRouteIndex, savedCarState, carRenderer);
window.addEventListener('resize', () => {
  // –£–±–∏—Ä–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ canvas - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
  game._layout(panningController, currentRouteIndex, savedCarState, carRenderer);

  // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  if (typeof panningController !== 'undefined' && panningController && panningController.isFullscreenMode()) {
    panningController.toggleFullscreen(); // –≤—ã–∫–ª—é—á–∞–µ–º
    panningController.toggleFullscreen(); // –≤–∫–ª—é—á–∞–µ–º —Å –Ω–æ–≤—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
  }
});



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –±—É–∫–≤–µ–Ω–Ω–æ-—Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –∏–Ω–¥–µ–∫—Å—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ Game.js –∫–∞–∫ _parseIntersectionCoordinate

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ —Å–≤–µ—Ç–æ—Ñ–æ—Ä –Ω–∞ –¥–∞–Ω–Ω–æ–º –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ Game.js –∫–∞–∫ _shouldHaveTrafficLight


// –§—É–Ω–∫—Ü–∏—è setupWorld –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ Game.js –∫–∞–∫ _setupWorld


// –§—É–Ω–∫—Ü–∏–∏-–æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π –¥–æ—Ä–æ–≥ –∏–∑ WorldRenderer


// –§—É–Ω–∫—Ü–∏—è createTrafficLightsForAllIntersections –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ Game.js –∫–∞–∫ _createTrafficLightsForAllIntersections

// –§—É–Ω–∫—Ü–∏—è drawDashedPath –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ WorldRenderer




// ======= –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –≥—Ä–∞—Ñ—É –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–æ–≤ –∏ –∑–¥–∞–Ω–∏–π =======
// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–æ–≤





// –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç —Å —É—á—ë—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π: —Ç–æ–ª—å–∫–æ I->I –∏ I->B/B->I

// –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—à–∏–Ω—ã —Ç–µ–ø–µ—Ä—å –≤ Game.js







// –§—É–Ω–∫—Ü–∏—è updateCar() –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ Game.js –∫–∞–∫ _updateCar()


// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–≥—Ä–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –ø–∞–Ω–æ—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è
const gameContainer = document.querySelector('.game-container');
gameContainer.style.width = '1200px';
gameContainer.style.height = '800px';
gameContainer.style.overflow = 'auto';

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
game.start();

