/**
 * JournalManager - –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–æ–º –ø–æ–µ–∑–¥–æ–∫
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –≤ –ø—É—Ç–∏, –º–µ—Å—Ç–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—é –¥–≤–∏–∂–µ–Ω–∏—è
 */
export class JournalManager {
  constructor(timeManager) {
    this.timeManager = timeManager;
    this.journal = [];
    this.currentTrip = null;
    this.currentLocation = '–î–æ–º'; // –®–∏–Ω–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –¥–æ–º–∞
    this.locationStartTime = null; // –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ –º–µ—Å—Ç–µ
    
    console.log(`üìù –®–∏–Ω–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–æ–º–∞`);
  }


  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ –º–µ—Å—Ç–µ
   * @param {string} location - –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞
   */
  setLocationStartTime(location) {
    const gameTime = this.timeManager.getGameTime();
    this.currentLocation = location;
    this.locationStartTime = this.formatTime(gameTime);
    console.log(`üìù –ù–∞—á–∞–ª–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ ${location} –≤ ${this.locationStartTime}`);
  }

  /**
   * –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –ø–æ–µ–∑–¥–∫—É
   * @param {string} destination - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
   * @param {string} location - –∫–ª—é—á –ª–æ–∫–∞—Ü–∏–∏
   */
  startTrip(destination, location) {
    const gameTime = this.timeManager.getGameTime();
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –ø—Ä–µ–±—ã–≤–∞–Ω–∏–µ –≤ –º–µ—Å—Ç–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (this.currentLocation && this.locationStartTime) {
      this.endLocationStay(this.currentLocation);
    }
    
    this.currentTrip = {
      id: Date.now(),
      destination: destination,
      location: location,
      startTime: this.formatTime(gameTime),
      endTime: null,
      duration: null,
      status: 'in_progress'
    };

    console.log(`üìù –ù–∞—á–∞—Ç–∞ –¥–æ—Ä–æ–≥–∞ –¥–æ ${destination} –≤ ${this.currentTrip.startTime}`);
  }

  /**
   * –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–µ–∑–¥–∫—É
   * @param {string} destination - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
   */
  endTrip(destination) {
    if (!this.currentTrip) return;

    const gameTime = this.timeManager.getGameTime();
    
    this.currentTrip.endTime = this.formatTime(gameTime);
    this.currentTrip.duration = this.calculateDuration(this.currentTrip.startTime, this.currentTrip.endTime);
    this.currentTrip.status = 'completed';

    const previousRecordTime = this.getLastRecordTime();
    const timeFromPrevious = this.calculateTimeFromPrevious(previousRecordTime, this.currentTrip.endTime);

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é –¥–æ—Ä–æ–≥—É –≤ –∂—É—Ä–Ω–∞–ª (–≤ –∫–æ–Ω–µ—Ü)
    this.journal.push({
      type: 'road',
      destination: this.currentTrip.destination,
      duration: this.currentTrip.duration,
      timeFromPrevious: timeFromPrevious,
      absoluteTime: this.currentTrip.endTime
    });

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ –º–µ—Å—Ç–µ
    this.currentLocation = destination;
    this.locationStartTime = this.currentTrip.endTime;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –≤—Ö–æ–¥–µ –≤ –∑–¥–∞–Ω–∏–µ —Å—Ä–∞–∑—É
    // –î–ª—è –∑–∞–ø–∏—Å–∏ –æ —Ä–∞–±–æ—Ç–µ timeFromPrevious –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –¥–æ—Ä–æ–≥–∏
    this.journal.push({
      type: 'work',
      destination: destination,
      duration: '0–º', // –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø–æ–∫–∞ 0, –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
      timeFromPrevious: '0–º', // –°—Ä–∞–∑—É –ø–æ—Å–ª–µ –¥–æ—Ä–æ–≥–∏, –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞
      absoluteTime: this.currentTrip.endTime,
      isActive: true // –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏
    });
    
    console.log(`üìù –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–æ—Ä–æ–≥–∞ –¥–æ ${this.currentTrip.destination} –≤ ${this.currentTrip.endTime}, –≤—Ä–µ–º—è –≤ –ø—É—Ç–∏: ${this.currentTrip.duration}`);
    console.log(`üìù –ù–∞—á–∞–ª–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ ${destination} –≤ ${this.currentTrip.endTime}`);

    this.currentTrip = null;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∂—É—Ä–Ω–∞–ª–∞
   * @returns {Array} –º–∞—Å—Å–∏–≤ –∑–∞–ø–∏—Å–µ–π –ø–æ–µ–∑–¥–æ–∫
   */
  getJournal() {
    return [...this.journal];
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–µ–∑–¥–∫—É
   * @returns {Object|null} —Ç–µ–∫—É—â–∞—è –ø–æ–µ–∑–¥–∫–∞ –∏–ª–∏ null
   */
  getCurrentTrip() {
    return this.currentTrip;
  }

  /**
   * –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–µ–±—ã–≤–∞–Ω–∏–µ –≤ –º–µ—Å—Ç–µ
   * @param {string} location - –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞
   */
  endLocationStay(location) {
    if (!this.currentLocation || !this.locationStartTime) return;

    const gameTime = this.timeManager.getGameTime();
    const currentTime = this.formatTime(gameTime);
    const stayDuration = this.calculateDuration(this.locationStartTime, currentTime);

    // –ù–∞—Ö–æ–¥–∏–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å –æ —Ä–∞–±–æ—Ç–µ
    for (let i = this.journal.length - 1; i >= 0; i--) {
      if (this.journal[i].type === 'work' && this.journal[i].isActive) {
        this.journal[i].duration = stayDuration;
        this.journal[i].isActive = false; // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å
        break;
      }
    }

    console.log(`üìù –ó–∞–≤–µ—Ä—à–µ–Ω–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏–µ –≤ ${location} –≤ ${currentTime}, –≤—Ä–µ–º—è –≤ –º–µ—Å—Ç–µ: ${stayDuration}`);

    this.currentLocation = null;
    this.locationStartTime = null;
  }


  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏ –≤ –∂—É—Ä–Ω–∞–ª–µ
   * @returns {string|null} –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏ –∏–ª–∏ null
   */
  getLastRecordTime() {
    if (this.journal.length === 0) {
      // –ï—Å–ª–∏ –∂—É—Ä–Ω–∞–ª –ø—É—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã (00:00)
      return '00:00';
    }
    
    const lastEntry = this.journal[this.journal.length - 1];
    return lastEntry.absoluteTime || '00:00';
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—Ä–µ–º—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏
   * @param {string} previousTime - –≤—Ä–µ–º—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏
   * @param {string} currentTime - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
   * @returns {string} –≤—Ä–µ–º—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏
   */
  calculateTimeFromPrevious(previousTime, currentTime) {
    if (!previousTime) return currentTime;
    
    const [prevHours, prevMinutes] = previousTime.split(':').map(Number);
    const [currHours, currMinutes] = currentTime.split(':').map(Number);
    
    const prevTotalMinutes = prevHours * 60 + prevMinutes;
    const currTotalMinutes = currHours * 60 + currMinutes;
    
    let durationMinutes = currTotalMinutes - prevTotalMinutes;
    
    // –£—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ –¥–µ–Ω—å
    if (durationMinutes < 0) {
      durationMinutes += 24 * 60;
    }

    return this.formatDuration(durationMinutes);
  }

  /**
   * –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏ (–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
   * @param {string} timeFromPrevious - –≤—Ä–µ–º—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏
   * @returns {string} –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è
   */
  addTimeToPrevious(timeFromPrevious) {
    // –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å timeFromPrevious
    // –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    const gameTime = this.timeManager.getGameTime();
    return this.formatTime(gameTime);
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç—å –∂—É—Ä–Ω–∞–ª
   */
  clearJournal() {
    this.journal = [];
    this.currentTrip = null;
    console.log('üìù –ñ—É—Ä–Ω–∞–ª –æ—á–∏—â–µ–Ω');
  }

  /**
   * –í—ã—á–∏—Å–ª–∏—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏
   * @param {string} startTime - –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ (HH:MM)
   * @param {string} endTime - –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è (HH:MM)
   * @returns {string} –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
   */
  calculateDuration(startTime, endTime) {
    const [startHours, startMinutes] = startTime.split(':').map(Number);
    const [endHours, endMinutes] = endTime.split(':').map(Number);
    
    const startTotalMinutes = startHours * 60 + startMinutes;
    const endTotalMinutes = endHours * 60 + endMinutes;
    
    let durationMinutes = endTotalMinutes - startTotalMinutes;
    
    // –£—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ –¥–µ–Ω—å
    if (durationMinutes < 0) {
      durationMinutes += 24 * 60;
    }

    return this.formatDuration(durationMinutes);
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param {Object} gameTime - –∏–≥—Ä–æ–≤–æ–µ –≤—Ä–µ–º—è
   * @returns {string} –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
   */
  formatTime(gameTime) {
    const hours = Math.floor(gameTime.hours).toString().padStart(2, '0');
    const minutes = Math.floor(gameTime.minutes).toString().padStart(2, '0');
    
    return `${hours}:${minutes}`;
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
   * @param {number} minutes - –º–∏–Ω—É—Ç—ã
   * @returns {string} –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
   */
  formatDuration(minutes) {
    const hours = Math.floor(minutes / 60);
    const mins = Math.floor(minutes % 60);
    
    if (hours > 0) {
      return `${hours}—á ${mins}–º`;
    } else {
      return `${mins}–º`;
    }
  }



}
